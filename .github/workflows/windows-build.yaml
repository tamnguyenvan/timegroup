name: Build and Package for Windows
on:
  push:
    tags:
      - '*.*.*'
jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m venv venv
        venv\Scripts\activate
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
      shell: pwsh
    - name: Compile resources
      run: |
        venv\Scripts\activate
        cd timegroup
        python compile_resources.py
    - name: Build with PyInstaller
      run: |
        venv\Scripts\activate
        cd packaging\windows
        pyinstaller --clean --noconfirm timegroup.spec
    - name: Write token.json
      run: |
        $tokenContent = @"
        {
          "token": "${{ secrets.GOOGLE_API_TOKEN }}",
          "refresh_token": "${{ secrets.GOOGLE_API_REFRESH_TOKEN }}",
          "token_uri": "https://oauth2.googleapis.com/token",
          "client_id": "${{ secrets.GOOGLE_API_CLIENT_ID }}",
          "client_secret": "${{ secrets.GOOGLE_API_CLIENT_SECRET }}",
          "scopes": ["https://www.googleapis.com/auth/spreadsheets"],
          "universe_domain": "googleapis.com",
          "account": "",
          "expiry": "2024-09-12T14:44:05.643993Z"
        }
        "@
        $tokenContent | Out-File -FilePath "dist\TimeGroup\_internal\token.json" -Force -Encoding utf8
      shell: pwsh
    - name: Update version in Inno Setup script
      run: |
        $version = "${{ github.ref_name }}"
        $content = Get-Content -Path packaging/windows/timegroup.iss -Raw
        $newContent = $content -replace '#define MyAppVersion ".*"', "#define MyAppVersion `"$version`""
        $newContent | Set-Content -Path packaging/windows/timegroup.iss
      shell: pwsh
    - name: Build installer with Inno Setup
      uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
      with:
        path: packaging/windows/timegroup.iss
        options: /O+ /F"TimeGroup-Setup-${{ github.ref_name }}"
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: TimeGroup-Setup-${{ github.ref_name }}.exe
        path: D:\a\timegroup\timegroup\packaging\windows\Output\TimeGroup-Setup-*.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: "**/Output/TimeGroup-Setup-${{ github.ref_name }}.exe"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}